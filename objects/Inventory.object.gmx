<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>Menu_Parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init the inventory

// Init the drag item
global.drag_item = noone;
current_inventory = noone;
current_item = noone;
current_slot_x = 0;
current_slot_y = 0;

// Setup some layout stuff
slot_width = 64;
equipment_left_padding = 20;


// Set up inv slots
global.inventory_slots = ds_grid_create(6,6);
ds_grid_clear(global.inventory_slots,noone);

// Set up the inventory offsets
// Centering that shit
var inventory_offset_left = (window_get_width() - slot_width * ds_grid_width(global.inventory_slots)) / 2;
var inventory_offset_top = (window_get_height() - slot_width * ds_grid_height(global.inventory_slots)) / 2;

// Get the inventory coordinates
inventory_coords = scr_init_inventory(global.inventory_slots, slot_width, inventory_offset_left, inventory_offset_top);


// Set up the equipment slots
global.equipment_slots = ds_grid_create(1,4);
scr_equip(instance_create(0,0,Shotgun));
scr_equip(instance_create(0,0,Scroll_Column));
scr_equip(instance_create(0,0,Armor_Heavy));
scr_equip(instance_create(0,0,Gem_Burn));

// Set up the equipment slot offsets
var equipment_offset_left = inventory_coords[2] + equipment_left_padding;
var equipment_offset_top = inventory_coords[1];

// Get the equipment slot coordinates
equipment_coords = scr_init_inventory(global.equipment_slots, slot_width, equipment_offset_left, equipment_offset_top);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy DS
if (ds_exists(slots,ds_type_grid)) ds_grid_destroy(slots);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Detect the Inventory slot the mouse is over and store it
var mousex = window_mouse_get_x();
var mousey = window_mouse_get_y();

if (scr_mouse_over_inv()) {
    current_inventory = global.inventory_slots;
    current_slot_x = (mousex - inventory_coords[0]) div slot_width;
    current_slot_y = (mousey - inventory_coords[1]) div slot_width;
    current_item = global.inventory_slots[# current_slot_x,current_slot_y];
} else if (scr_mouse_over_ui(equipment_coords[0],equipment_coords[1],equipment_coords[2],equipment_coords[3])) {
    current_inventory = global.equipment_slots;
    current_slot_x = (mousex - equipment_coords[0]) div slot_width;
    current_slot_y = (mousey - equipment_coords[1]) div slot_width;
    current_item = global.equipment_slots[# current_slot_x,current_slot_y];
} else {
    current_inventory = noone;
    current_slot_x = 0;
    current_slot_y = 0;
    current_item = noone;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check inventory item click

if (current_inventory != noone) {

    // Store the item that is in the slot at time of click
    var prev_item = current_inventory[# current_slot_x, current_slot_y];
    
    // Assign the dragged item to the slot
    // Make a check for equipment slots and only allow assigning the correct item type
    if (current_inventory == global.equipment_slots and global.drag_item != noone and object_get_parent(prev_item.object_index) == object_get_parent(global.drag_item.object_index)) {
        //Equip the item and send the prev_item back to the inv
        scr_equip(global.drag_item);
        scr_send_to_inv(prev_item);
        global.drag_item = noone;
        
    } else if (current_inventory == global.inventory_slots) {
        // Set the drag_item to the slot
        current_inventory[# current_slot_x, current_slot_y] = global.drag_item;
        // Make the item that was previously in the slot the new drag item
        global.drag_item = prev_item;
    }

} else if (current_inventory == noone and global.drag_item != noone) {
    scr_drop_item(global.drag_item);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the inventory
event_inherited();

// Set cell color
draw_set_color(c_black);
draw_set_alpha(.5);

// Draw the inventory slots
scr_draw_inventory(global.inventory_slots, slot_width, inventory_coords[0], inventory_coords[1]);

// Draw the equipment slots
scr_draw_inventory(global.equipment_slots, slot_width, equipment_coords[0], equipment_coords[1]);

// Show sprite on mouse if dragging
if (global.drag_item != noone) {
    var mousex = window_mouse_get_x();
    var mousey = window_mouse_get_y();
    draw_sprite_ext(global.drag_item.sprite_index, 0,mousex,mousey,4,4,45,c_white,1);
}

if (global.drag_item == noone and current_item != noone) {
    scr_draw_inv_tooltip(current_item.text,window_mouse_get_x(),window_mouse_get_y(),200);
}

// Reset the color and alpha
draw_set_color(c_white);
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
